./AirLib/include/api/RpcLibAdapatorsBase.hpp:    struct TripStats {
./AirLib/include/api/RpcLibAdapatorsBase.hpp:        TripStats()
./AirLib/include/api/RpcLibAdapatorsBase.hpp:        TripStats(const msr::airlib::TripStats& s)
./AirLib/include/api/RpcLibAdapatorsBase.hpp:        msr::airlib::TripStats to() const
./AirLib/include/api/RpcLibAdapatorsBase.hpp:            return msr::airlib::TripStats(state_of_charge,
./AirLib/include/api/VehicleApiBase.hpp:    virtual TripStats getTripStats(){
./AirLib/include/api/VehicleApiBase.hpp:    virtual void setTripStats(const TripStats& trip_stats){
./AirLib/include/api/VehicleApiBase.hpp:    TripStats trip_stats_;
./AirLib/include/common/CommonStructs.hpp:struct TripStats{
./AirLib/include/common/CommonStructs.hpp:    TripStats()
./AirLib/include/common/CommonStructs.hpp:    TripStats(float state_of_charge_val,
./AirLib/include/vehicles/multirotor/api/MultirotorApiBase.hpp:    virtual void setTripStats(const FlightStats& flight_stats);
./AirLib/include/vehicles/multirotor/api/MultirotorRpcLibClient.hpp:    TripStats getTripStats();
./AirLib/include/vehicles/multirotor/MultiRotor.hpp:            TripStats trip_stats;
./AirLib/include/vehicles/multirotor/MultiRotor.hpp:            vehicle_api_->setTripStats(trip_stats);
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorApiBase.hpp:    virtual void setTripStats(const TripStats& trip_stats) {
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorApiBase.hpp:        //TripStats;
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorApiBase.hpp:    virtual const TripStats getTripStats() const{
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorApiBase.hpp:        state.trip_stats = getTripStats();
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorApiBase.hpp:    TripStats trip_stats_; 
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorCommon.hpp:struct TripStats{
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorCommon.hpp:    TripStats()
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorCommon.hpp:    TripStats(float state_of_charge_val,
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorCommon.hpp:    TripStats trip_stats;
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorCommon.hpp:        LandedState landed_state_val, const RCData& rc_data_val, const TripStats& trip_stats)
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorCommon.hpp:    const TripStats& getTripStats() const{
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibAdapators.hpp:    struct TripStats {
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibAdapators.hpp:        TripStats()
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibAdapators.hpp:        TripStats(const msr::airlib::TripStats& s)
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibAdapators.hpp:        msr::airlib::TripStats to() const
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibAdapators.hpp:            return msr::airlib::TripStats(state_of_charge,
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibAdapators.hpp:        TripStats trip_stats;
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibClient.hpp:    TripStats getTripStats();
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/MultiRotor.hpp:            TripStats trip_stats; 
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/MultiRotor.hpp:            vehicle_api_->setTripStats(trip_stats);
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/MultiRotor.hpp:    TripStats getTripStats(){
./Unreal/Environments/Blocks/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/MultiRotor.hpp: //    TripStats trip_stats_;
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorApiBase.hpp:    virtual void setTripStats(const TripStats& trip_stats) {
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorApiBase.hpp:        //TripStats;
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorApiBase.hpp:    virtual const TripStats getTripStats() const{
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorApiBase.hpp:        state.trip_stats = getTripStats();
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorApiBase.hpp:    TripStats trip_stats_; 
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorCommon.hpp:struct TripStats{
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorCommon.hpp:    TripStats()
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorCommon.hpp:    TripStats(float state_of_charge_val,
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorCommon.hpp:    TripStats trip_stats;
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorCommon.hpp:        LandedState landed_state_val, const RCData& rc_data_val, const TripStats& trip_stats)
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorCommon.hpp:    const TripStats& getTripStats() const{
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibAdapators.hpp:    struct TripStats {
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibAdapators.hpp:        TripStats()
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibAdapators.hpp:        TripStats(const msr::airlib::TripStats& s)
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibAdapators.hpp:        msr::airlib::TripStats to() const
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibAdapators.hpp:            return msr::airlib::TripStats(state_of_charge,
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibAdapators.hpp:        TripStats trip_stats;
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/api/MultirotorRpcLibClient.hpp:    TripStats getTripStats();
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/MultiRotor.hpp:            TripStats trip_stats; 
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/MultiRotor.hpp:            vehicle_api_->setTripStats(trip_stats);
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/MultiRotor.hpp:    TripStats getTripStats(){
./Unreal/Plugins/AirSim/Source/AirLib/include/vehicles/multirotor/MultiRotor.hpp: //    TripStats trip_stats_;
